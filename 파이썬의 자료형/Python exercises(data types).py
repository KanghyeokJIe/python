## 파이썬 자료형 연습문제
# Q1 홍길동 씨의 과목별 점수는 다음과 같다. 홍길동 씨의 평균 점수를 구해 보자.
# 국어 : 80 , 영어 : 75 , 수학 : 55

kor = 80
eng = 75
math = 55

print((kor+eng+math)/3)         ## Result : 70.0

# Q2 자연수 13이 홀수인지 짝수인지 판별할 수 있는 방법에 대해 말해 보자.

print(13%2)         ## Result : 1
# % 연산자를 이용해 13을 나눈 나머지가 1이기에 13은 홀수 이다.

# Q3 홍길동 씨의 주민등록번호는 881120-1068234이다.
# 홍길동 씨의 주민등록번호를 연월일(YYYYMMDD) 부분과 그 뒤의 숫자 부분으로 나누어 출력해 보자.

pin = "881120-1068234"

yyyymmdd = (pin[:6])
num = (pin[7:])

print(yyyymmdd)         ## Result : 881120
print(num)          ##          1068234

# Q4 주민등록번호 뒷자리의 맨 첫 번째 숫자는 성별을 나타낸다. 주민등록번호에서 성별을 나타내는 숫자를 출력해 보자.
# ※ 문자열 인덱싱을 사용해 보자.

pin = "881120-1068234"

print(pin[7])           ## Result : 1
# 성별을 나타내는 숫자는 하이픈을 포함하여 8번째 숫자이므로 8번째 자리를 인덱싱한다.

# Q5 다음과 같은 문자열 a:b:c:d가 있다. 문자열의 replace 함수를 사용하여 a#b#c#d로 바꿔서 출력해 보자.

a = "a:b:c:d"

print(a.replace(":","#"))           ## Result : a#b#c#d

# Q6 [1, 3, 5, 4, 2] 리스트를 [5, 4, 3, 2, 1]로 만들어 보자. ※ 리스트의 내장 함수를 사용해 보자.

a = [1,3,5,4,2]

a.sort()
a.reverse()

print(a)            ## Result : [5, 4, 3, 2, 1]
# 리스트의 내장 함수인 sort를 사용하여 리스트 값들을 먼저 정렬한 후
# reverse 함수를 사용하여 순서를 뒤집는다.

# Q7 ['Life', 'is', 'too', 'short'] 리스트를 Life is too short 문자열로 만들어 출력해 보자.
# ※ 문자열의 join 함수를 사용하면 리스트를 문자열로 쉽게 만들 수 있다.

a = ['Life', 'is', 'too', 'short']
result = " ".join(a)
print(result)           ## Result : Life is too short

# Q8 (1,2,3) 튜플에 값 4를 추가하여 (1,2,3,4)를 만들어 출력해 보자.
# ※ 더하기(+)를 사용해 보자.

t1 = (1,2,3)
t2 = (4,)

print(t1+t2)            ## Result : (1, 2, 3, 4)
# a 튜플에 (4, )라는 튜플을 더하면 된다.
# 단, 이때 만들어지는 a + (4, )의 결과는 a 값이 변경되는 것이 아니라(튜플은 그 값을 변경할 수 없다)
# 새로운 튜플이 생성되고 그 값이 a 변수에 대입되는 것임에 유념하자.

# Q9 다음과 같은 딕셔너리 a가 있다.
# >>> a = dict()
# >>> a
# {}

# 다음 중 오류가 발생하는 경우를 고르고, 그 이유를 설명해 보자.

# a['name'] = 'python'
# a[('a',)] = 'python'
# a[[1]] = 'python'
# a[250] = 'python'

# 3번째 예를 실행하면 다음과 같은 오류가 발생한다.
# >>> a[[1]] = 'python'
# Traceback (most recent call last):
#   File "<stdin>", line 1, in <module>
# TypeError: unhashable type: 'list'

# 오류가 발생하는 이유는 딕셔너리의 키로는 변하는(mutable) 값을 사용할 수 없기 때문이다.
# 위 예에서 키로 사용된 [1]은 리스트이므로 변하는 값이다.
# 다른 예에서 키로 사용된 문자열, 튜플, 숫자는 변하지 않는(immutable) 값이므로 딕셔너리의 키로 사용이 가능하다.

# Q10 딕셔너리 a에서 'B'에 해당되는 값을 추출해 보자. ※ 딕셔너리의 pop 함수를 사용해 보자.

a = {'A':90, 'B':80, 'C':70}

result = a.pop('B')

print(a)            ## Result : {'A': 90, 'C': 70}
print(result)           ##          80
# ‘B’ 키 값에 해당되는 값이 리턴되고 딕셔너리
# a에서는 그 값이 제거되는 것을 확인할 수 있다.

# Q11 a 리스트에서 중복 숫자를 제거해 보자. ※ 집합 자료형의 요솟값이 중복될 수 없다는 특징을 사용해 보자.

a = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5]
aSet =set(a)
b = list(aSet)

print(b)            ## Result : {1, 2, 3, 4, 5}
# 리스트 자료형이 집합 자료형으로 변환되면서 중복된 값들은 사라지게 된다.
# 이와 같은 성질을 사용하면 리스트 내에 중 복된 값을 쉽게 제거할 수 있다.

# Q12 파이썬은 다음처럼 동일한 값에 여러 개의 변수를 선언할 수 있다.
# 다음과 같이 a, b 변수를 선언한 후 a의 두 번째 요솟값을 변경하면 b 값은 어떻게 될까?
# 그리고 이런 결과가 오는 이유에 대해 설명해 보자.

# >>> a = b = [1, 2, 3]
# >>> a[1] = 4
# >>> print(b)

# A : b의 값은 [1, 4, 3]이 출력된다. a와 b 변수는 모두 동일한 [1, 2, 3]이라는 리스트 객체를 가리키고 있기 때문이다.
